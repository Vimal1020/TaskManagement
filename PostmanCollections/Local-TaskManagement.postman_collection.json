{
	"info": {
		"_postman_id": "a82e1215-5183-4610-b3c4-a09a0456ba57",
		"name": "Local-TaskManagement",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "25676329"
	},
	"item": [
		{
			"name": "Register",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// Basic status check\r",
							"pm.test(\"Status code is 200\", () => pm.response.to.have.status(200));\r",
							"\r",
							"try {\r",
							"    const data = pm.response.json();\r",
							"    \r",
							"    if (data.token) {\r",
							"        // Save token as environment variable\r",
							"        pm.environment.set(\"TOKEN\", data.token);\r",
							"        console.log(\"Token saved successfully\");\r",
							"    } else {\r",
							"        console.log(\"Token not found in response\");\r",
							"    }\r",
							"} catch (error) {\r",
							"    console.log(\"Error parsing response\");\r",
							"}"
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n           \"email\": \"testdocker@example.com\",\n           \"firstName\": \"Test\",\n           \"lastName\": \"Docker\",\n           \"password\": \"TestForDocker@10\",\n           \"role\": \"Admin\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://localhost:7043/api/auth/register",
					"protocol": "https",
					"host": [
						"localhost"
					],
					"port": "7043",
					"path": [
						"api",
						"auth",
						"register"
					]
				}
			},
			"response": []
		},
		{
			"name": "Login",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// Parse the response body as JSON\r",
							"const responseData = pm.response.json();\r",
							"\r",
							"// Check if the token exists (adjust the key if necessary)\r",
							"if (responseData.token) {\r",
							"    // Save the token into an environment variable called 'TOKEN'\r",
							"    pm.environment.set(\"TOKEN\", responseData.token);\r",
							"    console.log(\"Token captured:\", responseData.token);\r",
							"} else {\r",
							"    console.error(\"Token not found in response.\");\r",
							"}"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n           \"email\": \"testdocker@example.com\",\n           \"password\": \"TestForDocker@10\"\n         }",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://localhost:7043/api/auth/login",
					"protocol": "https",
					"host": [
						"localhost"
					],
					"port": "7043",
					"path": [
						"api",
						"auth",
						"login"
					]
				}
			},
			"response": []
		},
		{
			"name": "Create Task",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"if (pm.environment.get(\"TOKEN\")) {\r",
							"    console.log(\"TOKEN exists:\", pm.environment.get(\"TOKEN\"));\r",
							"} else {\r",
							"    console.error(\"TOKEN not found in environment.\");\r",
							"    // Optionally, you can fail the test:\r",
							"    pm.test(\"TOKEN is present\", function () {\r",
							"        pm.expect(pm.environment.get(\"TOKEN\")).to.not.be.undefined;\r",
							"    });\r",
							"}\r",
							"\r",
							"pm.test(\"Response status code is 401\", function () {\r",
							"    pm.response.to.have.status(401);\r",
							"});\r",
							"\r",
							"\r",
							"pm.test(\"Response Content-Type header is text/xml\", function () {\r",
							"    pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"text/xml\");\r",
							"});\r",
							"\r",
							"\r",
							"pm.test(\"Request includes a valid authorization token in the headers\", function () {\r",
							"    pm.expect(pm.request.headers.get(\"Authorization\")).to.exist;\r",
							"    pm.expect(pm.request.headers.get(\"Authorization\")).to.match(/^Bearer .+/);\r",
							"});\r",
							"\r",
							"\r",
							"pm.test(\"Check if the token has the necessary permissions to create a task\", function () {\r",
							"    const responseData = xml2Json(pm.response.text());\r",
							"    \r",
							"    pm.expect(responseData).to.be.an('object');\r",
							"    pm.expect(responseData).to.have.property('permission').that.is.a('string').and.equals('create_task');\r",
							"});\r",
							"\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "jwt",
					"jwt": [
						{
							"key": "header",
							"value": "{}",
							"type": "string"
						},
						{
							"key": "algorithm",
							"value": "HS256",
							"type": "string"
						},
						{
							"key": "isSecretBase64Encoded",
							"value": false,
							"type": "boolean"
						},
						{
							"key": "payload",
							"value": "{}",
							"type": "string"
						},
						{
							"key": "addTokenTo",
							"value": "header",
							"type": "string"
						},
						{
							"key": "headerPrefix",
							"value": "Bearer",
							"type": "string"
						},
						{
							"key": "queryParamKey",
							"value": "token",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					},
					{
						"key": "Authorization",
						"value": "Bearer {{TOKEN}}"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n\n           \"title\": \"New Task\",\n\n           \"description\": \"This is a new task created via curl\",\n\n           \"status\": 1,\n\n           \"assignedUserId\": 1,\n\n           \"dueDate\": \"2025-12-31T23:59:59Z\"\n\n         }",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://localhost:7043/api/tasks",
					"protocol": "https",
					"host": [
						"localhost"
					],
					"port": "7043",
					"path": [
						"api",
						"tasks"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get a Task by ID",
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{TOKEN}}"
					}
				],
				"url": {
					"raw": "https://localhost:7043/api/tasks/1",
					"protocol": "https",
					"host": [
						"localhost"
					],
					"port": "7043",
					"path": [
						"api",
						"tasks",
						"1"
					]
				}
			},
			"response": []
		},
		{
			"name": "Update an Existing Task",
			"request": {
				"method": "PUT",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					},
					{
						"key": "Authorization",
						"value": "Bearer {{TOKEN}}"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n           \"title\": \"Updated Task Title\",\n           \"description\": \"Updated description\",\n           \"status\": 2,\n           \"assignedUserId\": 1,\n           \"dueDate\": \"2025-12-31T23:59:59Z\"\n         }",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://localhost:7043/api/tasks/1",
					"protocol": "https",
					"host": [
						"localhost"
					],
					"port": "7043",
					"path": [
						"api",
						"tasks",
						"1"
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete Task",
			"request": {
				"method": "DELETE",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{TOKEN}}"
					}
				],
				"url": {
					"raw": "https://localhost:7043/api/tasks/1",
					"protocol": "https",
					"host": [
						"localhost"
					],
					"port": "7043",
					"path": [
						"api",
						"tasks",
						"1"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Tasks for a Specific User",
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{TOKEN}}"
					}
				],
				"url": {
					"raw": "https://localhost:7043/api/tasks/user/1?page=1&pageSize=10",
					"protocol": "https",
					"host": [
						"localhost"
					],
					"port": "7043",
					"path": [
						"api",
						"tasks",
						"user",
						"1"
					],
					"query": [
						{
							"key": "page",
							"value": "1"
						},
						{
							"key": "pageSize",
							"value": "10"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Tasks by User with Search Term",
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{TOKEN}}"
					}
				],
				"url": {
					"raw": "https://localhost:7043/api/tasks/user/search/1?pageNumber=1&pageSize=10&searchTerm=Task",
					"protocol": "https",
					"host": [
						"localhost"
					],
					"port": "7043",
					"path": [
						"api",
						"tasks",
						"user",
						"search",
						"1"
					],
					"query": [
						{
							"key": "pageNumber",
							"value": "1"
						},
						{
							"key": "pageSize",
							"value": "10"
						},
						{
							"key": "searchTerm",
							"value": "Task"
						}
					]
				}
			},
			"response": []
		}
	],
	"variable": [
		{
			"key": "TOKEN_COLLECTION",
			"value": ""
		}
	]
}