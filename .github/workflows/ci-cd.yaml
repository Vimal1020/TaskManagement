name: CI/CD Pipeline

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master
  workflow_dispatch:

env:
  DOTNET_VERSION: '8.0.x'
  DOCKERFILE_PATH: './TaskManagement.API/Dockerfile'
  BUNDLE_PROJECT: 'TaskManagement.Bundle.csproj'
  SOLUTION_FILE: 'TaskManagement.sln'

permissions:
  contents: read
  packages: write

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: ${{ env.DOTNET_VERSION }}

      - name: Restore dependencies
        run: dotnet restore ${{ env.SOLUTION_FILE }}

      - name: Build solution
        run: dotnet build ${{ env.SOLUTION_FILE }} --configuration Release --no-restore

      - name: Run tests
        run: dotnet test ${{ env.SOLUTION_FILE }} --configuration Release --no-build --verbosity normal

  docker-build-push:
    runs-on: ubuntu-latest
    needs: build-and-test
    if: github.event_name == 'push'
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        with:
          driver: docker-container

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ${{ env.DOCKERFILE_PATH }}
          platforms: linux/amd64
          push: true
          tags: |
            ${{ secrets.DOCKER_USERNAME }}/taskmanagement-api:latest
            ${{ secrets.DOCKER_USERNAME }}/taskmanagement-api:${{ github.sha }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

  nuget-pack-publish:
    runs-on: ubuntu-latest
    needs: build-and-test
    if: github.event_name == 'push'
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: ${{ env.DOTNET_VERSION }}

      - name: Restore & build solution
        run: |
          dotnet restore ${{ env.SOLUTION_FILE }}
          dotnet build   ${{ env.SOLUTION_FILE }} --configuration Release --no-restore

      - name: Pack Bundle project
        run: |
          dotnet pack ${{ env.BUNDLE_PROJECT }} \
            --configuration Release \
            --no-build \
            --output ./nupkg

      - name: Publish NuGet package
        run: |
          dotnet nuget push ./nupkg/*.nupkg \
            --source "https://nuget.pkg.github.com/Vimal1020/index.json" \
            --api-key ${{ secrets.GH_PAT }}
